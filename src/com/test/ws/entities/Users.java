package com.test.ws.entities;

// Generated Jan 1, 2018 2:31:13 PM by Hibernate Tools 4.0.0

import static javax.persistence.GenerationType.IDENTITY;

import java.math.BigDecimal;
import java.util.Date;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.GeneratedValue;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Users generated by hbm2java
 */
@Entity
@Table(name = "users", catalog = "tes")
public class Users implements java.io.Serializable {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private Long id;
	private UserRoles userRoles;
	private String firstName;
	private String middleName;
	private String lastName;
	private String username;
	private String email;
	private String password;
	private String phone;
	private String whatsappNumber;
	private boolean emailVerified;
	private Date birthDate;
	private String userImage;
	private BigDecimal latitude;
	private BigDecimal longitude;
	private String address;
	private int areaId;
	private int mandalId;
	private String authToken;
	private String relationshipStatus;
	private Date createdAt;
	private Date updatedAt;
	private boolean status;
	private int deviceType;
	private String deviceToken;
	private int badgeCount;

	public Users() {
	}

	public Users(UserRoles userRoles, String firstName, String middleName,
			String lastName, String username, String email, String password,
			String phone, String whatsappNumber, boolean emailVerified,
			Date birthDate, BigDecimal latitude, BigDecimal longitude,
			String address, int areaId, int mandalId, String authToken,
			String relationshipStatus, Date createdAt, Date updatedAt,
			boolean status, int deviceType, String deviceToken, int badgeCount) {
		this.userRoles = userRoles;
		this.firstName = firstName;
		this.middleName = middleName;
		this.lastName = lastName;
		this.username = username;
		this.email = email;
		this.password = password;
		this.phone = phone;
		this.whatsappNumber = whatsappNumber;
		this.emailVerified = emailVerified;
		this.birthDate = birthDate;
		this.latitude = latitude;
		this.longitude = longitude;
		this.address = address;
		this.areaId = areaId;
		this.mandalId = mandalId;
		this.authToken = authToken;
		this.relationshipStatus = relationshipStatus;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.status = status;
		this.deviceType = deviceType;
		this.deviceToken = deviceToken;
		this.badgeCount = badgeCount;
	}

	public Users(UserRoles userRoles, String firstName, String middleName,
			String lastName, String username, String email, String password,
			String phone, String whatsappNumber, boolean emailVerified,
			Date birthDate, String userImage, BigDecimal latitude,
			BigDecimal longitude, String address, int areaId, int mandalId,
			String authToken, String relationshipStatus, Date createdAt,
			Date updatedAt, boolean status, int deviceType, String deviceToken,
			int badgeCount, Integer utype, String utypeName) {
		this.userRoles = userRoles;
		this.firstName = firstName;
		this.middleName = middleName;
		this.lastName = lastName;
		this.username = username;
		this.email = email;
		this.password = password;
		this.phone = phone;
		this.whatsappNumber = whatsappNumber;
		this.emailVerified = emailVerified;
		this.birthDate = birthDate;
		this.userImage = userImage;
		this.latitude = latitude;
		this.longitude = longitude;
		this.address = address;
		this.areaId = areaId;
		this.mandalId = mandalId;
		this.authToken = authToken;
		this.relationshipStatus = relationshipStatus;
		this.createdAt = createdAt;
		this.updatedAt = updatedAt;
		this.status = status;
		this.deviceType = deviceType;
		this.deviceToken = deviceToken;
		this.badgeCount = badgeCount;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)
	@Column(name = "id", unique = true, nullable = false)
	public Long getId() {
		return this.id;
	}

	public void setId(Long id) {
		this.id = id;
	}

	@ManyToOne
	@JoinColumn(name = "role_id", nullable = false)
	public UserRoles getUserRoles() {
		return this.userRoles;
	}

	public void setUserRoles(UserRoles userRoles) {
		this.userRoles = userRoles;
	}

	@Column(name = "first_name", nullable = false)
	public String getFirstName() {
		return this.firstName;
	}

	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}

	@Column(name = "middle_name", nullable = false)
	public String getMiddleName() {
		return this.middleName;
	}

	public void setMiddleName(String middleName) {
		this.middleName = middleName;
	}

	@Column(name = "last_name", nullable = false)
	public String getLastName() {
		return this.lastName;
	}

	public void setLastName(String lastName) {
		this.lastName = lastName;
	}

	@Column(name = "username", nullable = false)
	public String getUsername() {
		return this.username;
	}

	public void setUsername(String username) {
		this.username = username;
	}

	@Column(name = "email", nullable = false)
	public String getEmail() {
		return this.email;
	}

	public void setEmail(String email) {
		this.email = email;
	}

	@Column(name = "password", nullable = false)
	public String getPassword() {
		return this.password;
	}

	public void setPassword(String password) {
		this.password = password;
	}

	@Column(name = "phone", nullable = false)
	public String getPhone() {
		return this.phone;
	}

	public void setPhone(String phone) {
		this.phone = phone;
	}

	@Column(name = "whatsapp_number", nullable = false)
	public String getWhatsappNumber() {
		return this.whatsappNumber;
	}

	public void setWhatsappNumber(String whatsappNumber) {
		this.whatsappNumber = whatsappNumber;
	}

	@Column(name = "email_verified", nullable = false)
	public boolean isEmailVerified() {
		return this.emailVerified;
	}

	public void setEmailVerified(boolean emailVerified) {
		this.emailVerified = emailVerified;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "birth_date", nullable = false, length = 19)
	public Date getBirthDate() {
		return this.birthDate;
	}

	public void setBirthDate(Date birthDate) {
		this.birthDate = birthDate;
	}

	@Column(name = "user_image")
	public String getUserImage() {
		return this.userImage;
	}

	public void setUserImage(String userImage) {
		this.userImage = userImage;
	}

	@Column(name = "latitude", nullable = false, precision = 11, scale = 8)
	public BigDecimal getLatitude() {
		return this.latitude;
	}

	public void setLatitude(BigDecimal latitude) {
		this.latitude = latitude;
	}

	@Column(name = "longitude", nullable = false, precision = 11, scale = 8)
	public BigDecimal getLongitude() {
		return this.longitude;
	}

	public void setLongitude(BigDecimal longitude) {
		this.longitude = longitude;
	}

	@Column(name = "address", nullable = false)
	public String getAddress() {
		return this.address;
	}

	public void setAddress(String address) {
		this.address = address;
	}

	@Column(name = "area_id", nullable = false)
	public int getAreaId() {
		return this.areaId;
	}

	public void setAreaId(int areaId) {
		this.areaId = areaId;
	}

	@Column(name = "mandal_id", nullable = false)
	public int getMandalId() {
		return this.mandalId;
	}

	public void setMandalId(int mandalId) {
		this.mandalId = mandalId;
	}

	@Column(name = "auth_token", nullable = false)
	public String getAuthToken() {
		return this.authToken;
	}

	public void setAuthToken(String authToken) {
		this.authToken = authToken;
	}

	@Column(name = "relationship_status", nullable = false)
	public String getRelationshipStatus() {
		return this.relationshipStatus;
	}

	public void setRelationshipStatus(String relationshipStatus) {
		this.relationshipStatus = relationshipStatus;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created_at", nullable = false, length = 19)
	public Date getCreatedAt() {
		return this.createdAt;
	}

	public void setCreatedAt(Date createdAt) {
		this.createdAt = createdAt;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "updated_at", nullable = false, length = 19)
	public Date getUpdatedAt() {
		return this.updatedAt;
	}

	public void setUpdatedAt(Date updatedAt) {
		this.updatedAt = updatedAt;
	}

	@Column(name = "status", nullable = false)
	public boolean isStatus() {
		return this.status;
	}

	public void setStatus(boolean status) {
		this.status = status;
	}

	@Column(name = "device_type", nullable = false)
	public int getDeviceType() {
		return this.deviceType;
	}

	public void setDeviceType(int deviceType) {
		this.deviceType = deviceType;
	}

	@Column(name = "device_token", nullable = false)
	public String getDeviceToken() {
		return this.deviceToken;
	}

	public void setDeviceToken(String deviceToken) {
		this.deviceToken = deviceToken;
	}

	@Column(name = "badge_count", nullable = false)
	public int getBadgeCount() {
		return this.badgeCount;
	}

	public void setBadgeCount(int badgeCount) {
		this.badgeCount = badgeCount;
	}
}
